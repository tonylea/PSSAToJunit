parameters:
  - name: vmLinuxImage
    type: string

stages:
  - stage: buildDeploy
    displayName: Build & Deploy
    pool:
      vmImage: ${{ parameters.vmLinuxImage }}}
    dependsOn: integrationTests
    condition: |
      and(
        succeeded(),
        eq(variables['Build.SourceBranch'], 'refs/heads/main')
      )
    jobs:
      - job: BumpVersion
        displayName: Bump version
        steps:
          - pwsh: |
              $BuildFolder = Join-Path -Path $env:ROOT_FOLDER -ChildPath $env:BUILD_FOLDER_NAME
              $BuildScriptPath = Join-Path -Path $BuildFolder -ChildPath $env:BUILD_FILENAME
              $DependancyConfigPath = Join-Path -Path $BuildFolder -ChildPath $env:DEPENDANCY_FILENAME

              Write-Host "Running build script: $BuildScriptPath" -foregroundcolor cyan

              $BuildScriptPathArgs = @{
                ResolveDependency    = $true
                DependencyConfigPath = $DependancyConfigPath
                Task                 = "BumpVersion"
                ImportProjectModule  = $true
              }
              . $BuildScriptPath @BuildScriptPathArgs
            env:
              ROOT_FOLDER: $(System.DefaultWorkingDirectory)
              BUILD_FOLDER_NAME: build
              BUILD_FILENAME: build.ps1
              DEPENDANCY_FILENAME: dependancies.psd1
            displayName: run platyPS
            workingDirectory: $(System.DefaultWorkingDirectory)

          # - pwsh: |
          #     $BuildFolder = Join-Path -Path $env:ROOT_FOLDER -ChildPath $env:BUILD_FOLDER_NAME
          #     $BuildScriptPath = Join-Path -Path $BuildFolder -ChildPath $env:BUILD_FILENAME
          #     $DependancyConfigPath = Join-Path -Path $BuildFolder -ChildPath $env:DEPENDANCY_FILENAME

          #     Write-Host "Running build script: $BuildScriptPath" -foregroundcolor cyan

          #     $BuildScriptPathArgs = @{
          #       ResolveDependency    = $true
          #       DependencyConfigPath = $DependancyConfigPath
          #       Task                 = "BuildPackage"
          #       ImportProjectModule  = $true
          #     }
          #     . $BuildScriptPath @BuildScriptPathArgs
          #   env:
          #     ROOT_FOLDER: $(System.DefaultWorkingDirectory)
          #     BUILD_FOLDER_NAME: build
          #     BUILD_FILENAME: build.ps1
          #     DEPENDANCY_FILENAME: dependancies.psd1
          #   displayName: build package
          #   workingDirectory: $(System.DefaultWorkingDirectory)

          # - task: NuGetCommand@2
          #   inputs:
          #     command: 'pack'
          #     packagesToPack: '$(System.DefaultWorkingDirectory)/staging/compiled.nuspec'
          #     versioningScheme: off

          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          #     ArtifactName: 'NuGetPackage'
          #     publishLocation: 'Container'
