parameters:
  - name: operatingSystem
    type: string
  - name: dependencyConfigPath
    type: string
  - name: integrationTestsFolder
    type: string
  - name: psakeFilePath
    type: string
  - name: testResultsPath
    type: string
  - name: entryScriptPath
    type: string

steps:
  - pwsh: |
      $EntryScriptPathArgs = @{
        DependencyConfigPath = $env:DEPENDENCY_CONFIG_PATH
        ProjectRoot          = $env:PROJECT_ROOT
        Task                 = "InstallDependencies"
      }
      . $env:ENTRY_SCRIPTPATH @EntryScriptPathArgs
    env:
      ENTRY_SCRIPTPATH: ${{ parameters.entryScriptPath }}
      DEPENDENCY_CONFIG_PATH: ${{ parameters.dependencyConfigPath }}
      PROJECT_ROOT: $(System.DefaultWorkingDirectory)
    displayName: install dependencies
    workingDirectory: $(System.DefaultWorkingDirectory)

  - pwsh: |
      $EntryScriptPathArgs = @{
        PSakeFilepath = $env:PSAKE_FILEPATH
        ProjectRoot   = $env:PROJECT_ROOT
        Task          = "IntegrationTests"
      }
      . $env:ENTRY_SCRIPTPATH @EntryScriptPathArgs
    env:
      ENTRY_SCRIPTPATH: ${{ parameters.entryScriptPath }}
      PSAKE_FILEPATH: ${{ parameters.psakeFilePath }}
      TEST_RESULTS_PATH: ${{ parameters.testResultsPath }}
      INTEGRATION_TESTS_FOLDER: ${{ parameters.integrationTestsFolder }}
      PROJECT_ROOT: $(System.DefaultWorkingDirectory)
    displayName: run pester tests
    workingDirectory: $(System.DefaultWorkingDirectory)

  - task: PublishTestResults@2
    displayName: publish tests results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/*.xml"
      searchFolder: "${{ parameters.testResultsPath }}"
      mergeTestResults: false
      testRunTitle: ${{ parameters.operatingSystem }}-integration-tests
      failTaskOnFailedTests: true
      publishRunAttachments: true

  - template: ./step.clean-up-tests.yml
    parameters:
      testResultsPath: ${{ parameters.testResultsPath }}
