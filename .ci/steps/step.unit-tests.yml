parameters:
  - name: operatingSystem
    type: string
  - name: dependencyConfigPath
    type: string
  - name: psakeFilePath
    type: string
  - name: testResultsPath
    type: string
  - name: unitTestsFolder
    type: string
  - name: entryScriptPath
    type: string

steps:
  - pwsh: |
      $EntryScriptPathArgs = @{
        DependencyConfigPath = $env:DEPENDENCY_CONFIG_PATH
        ProjectRoot          = $env:PROJECT_ROOT
        Task                 = "InstallDependencies"
      }
      . $env:ENTRY_SCRIPTPATH @UtilScriptPathArgs
    env:
      ENTRY_SCRIPTPATH: ${{ parameters.entryScriptPath }}
      DEPENDENCY_CONFIG_PATH: ${{ parameters.dependencyConfigPath }}
      PROJECT_ROOT: $(System.DefaultWorkingDirectory)
    displayName: install dependencies
    workingDirectory: $(System.DefaultWorkingDirectory)

  - pwsh: |
      $EntryScriptPathArgs = @{
        PSakeFilepath = $env:PSAKE_FILEPATH
        ProjectRoot   = $env:PROJECT_ROOT
        Task          = "UnitTests"
      }
      . $env:ENTRY_SCRIPTPATH @UtilScriptPathArgs
    env:
      ENTRY_SCRIPTPATH: ${{ parameters.entryScriptPath }}
      PSAKE_FILEPATH: ${{ parameters.psakeFilePath }}
      TEST_RESULTS_PATH: ${{ parameters.testResultsPath }}
      UNIT_TESTS_FOLDER: ${{ parameters.unitTestsFolder }}
      PROJECT_ROOT: $(System.DefaultWorkingDirectory)
    displayName: run pester tests
    workingDirectory: $(System.DefaultWorkingDirectory)

  - task: PublishTestResults@2
    displayName: publish test results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/**.xml"
      searchFolder: "${{ parameters.testResultsPath }}"
      mergeTestResults: false
      testRunTitle: ${{ parameters.operatingSystem }}-unit-tests
      failTaskOnFailedTests: true
      publishRunAttachments: true

  - task: PublishCodeCoverageResults@1
    displayName: publish code coverage
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: JaCoCo
      summaryFileLocation: "**/${{ parameters.operatingSystem }}-code-coverage.xml"
      failIfCoverageEmpty: true

  - template: ./step.clean-up-tests.yml
    parameters:
      testResultsPath: ${{ parameters.testResultsPath }}
